basePath: /api/v1
definitions:
  models.AuthResponse:
    properties:
      access_token:
        type: string
      message:
        type: string
      ok:
        type: boolean
      refresh_token:
        type: string
    type: object
  models.Post:
    properties:
      author_id:
        type: integer
      date:
        type: string
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      postTags:
        items:
          $ref: '#/definitions/models.PostTags'
        type: array
      reposts:
        type: integer
      time_end:
        type: string
      time_start:
        type: string
      type:
        $ref: '#/definitions/models.PostType'
      views:
        type: integer
      where:
        type: string
    type: object
  models.PostTags:
    properties:
      id:
        type: integer
      post_id:
        type: integer
      tag_id:
        type: integer
    type: object
  models.PostType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Event
    - People
    - Community
    - Project
  models.Response:
    properties:
      message:
        type: string
      ok:
        type: boolean
    type: object
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.User:
    properties:
      age:
        example: 24
        type: integer
      id:
        type: integer
      login:
        example: ivan.petrov@mail.ru
        type: string
      name:
        example: Andrey
        type: string
      nick:
        example: PedanticCow
        type: string
      password:
        example: mypaSSword123876
        type: string
      refresh_token:
        example: ""
        type: string
    type: object
  models.UserAuthInfo:
    properties:
      login:
        example: ivan.petrov@mail.ru
        type: string
      password:
        example: mypaSSword123876
        type: string
    type: object
info:
  contact: {}
  description: Pears API, specification and description
  title: Pears auto documentation
  version: "1.0"
paths:
  /post/create:
    post:
      consumes:
      - application/json
      description: creating a new post with body parameters
      parameters:
      - description: request body with info about post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - JWTToken: []
      summary: Create new post
  /post/get/{id}:
    get:
      consumes:
      - application/json
      description: get post info
      parameters:
      - description: post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - JWTToken: []
      summary: Get a post
  /post/list:
    get:
      consumes:
      - application/json
      description: takes array of posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - JWTToken: []
      summary: List of posts
  /user/authorization:
    post:
      consumes:
      - application/json
      description: authorization and take a token
      parameters:
      - description: request body with login and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserAuthInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponse'
      summary: Authorization
  /user/refresh:
    post:
      consumes:
      - application/json
      description: method for check refresh token and refresh tokens
      parameters:
      - description: request body with access and refresh tokens
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.AuthResponse'
      summary: RefreshTokens
  /user/registration:
    post:
      consumes:
      - application/json
      description: add new user to the database
      parameters:
      - description: request body with info about user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      summary: Registration
  /userinfo/list:
    get:
      consumes:
      - application/json
      description: take list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - JWTToken: []
      summary: List of users
securityDefinitions:
  JWTToken:
    description: Access token only
    in: header
    name: token
    type: apiKey
swagger: "2.0"
