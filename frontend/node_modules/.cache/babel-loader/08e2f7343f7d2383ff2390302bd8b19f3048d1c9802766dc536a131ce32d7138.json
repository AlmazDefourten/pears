{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement'\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n        var cssColorScheme = mode;\n        var colorScheme = '';\n        if (mode === 'system') {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            cssColorScheme = 'dark';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            cssColorScheme = 'light';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  }, \"mui-color-scheme-init\");\n}","map":{"version":3,"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getInitColorSchemeScript","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","attribute","colorSchemeNode","dangerouslySetInnerHTML","__html"],"sources":["C:/Users/Кирилл/Desktop/gdfjtgj/pears/frontend/node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"],"sourcesContent":["import * as React from 'react';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\r\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\r\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\r\nexport default function getInitColorSchemeScript(options) {\r\n  const {\r\n    defaultMode = 'light',\r\n    defaultLightColorScheme = 'light',\r\n    defaultDarkColorScheme = 'dark',\r\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\r\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\r\n    attribute = DEFAULT_ATTRIBUTE,\r\n    colorSchemeNode = 'document.documentElement'\r\n  } = options || {};\r\n  return /*#__PURE__*/_jsx(\"script\", {\r\n    // eslint-disable-next-line react/no-danger\r\n    dangerouslySetInnerHTML: {\r\n      __html: `(function() { try {\r\n        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\r\n        var cssColorScheme = mode;\r\n        var colorScheme = '';\r\n        if (mode === 'system') {\r\n          // handle system mode\r\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\r\n          if (mql.matches) {\r\n            cssColorScheme = 'dark';\r\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\r\n          } else {\r\n            cssColorScheme = 'light';\r\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\r\n          }\r\n        }\r\n        if (mode === 'light') {\r\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\r\n        }\r\n        if (mode === 'dark') {\r\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\r\n        }\r\n        if (colorScheme) {\r\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\r\n        }\r\n      } catch (e) {} })();`\r\n    }\r\n  }, \"mui-color-scheme-init\");\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC9C,OAAO,MAAMC,gCAAgC,GAAG,cAAc;AAC9D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,eAAe,SAASC,wBAAwBA,CAACC,OAAO,EAAE;EACxD,MAAM;IACJC,WAAW,GAAG,OAAO;IACrBC,uBAAuB,GAAG,OAAO;IACjCC,sBAAsB,GAAG,MAAM;IAC/BC,cAAc,GAAGR,wBAAwB;IACzCS,qBAAqB,GAAGR,gCAAgC;IACxDS,SAAS,GAAGR,iBAAiB;IAC7BS,eAAe,GAAG;EACpB,CAAC,GAAGP,OAAO,IAAI,CAAC,CAAC;EACjB,OAAO,aAAaL,IAAI,CAAC,QAAQ,EAAE;IACjC;IACAa,uBAAuB,EAAE;MACvBC,MAAM,EAAG;AACf,2CAA2CL,cAAe,UAASH,WAAY;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkDI,qBAAsB,eAAcF,sBAAuB;AAC7G;AACA;AACA,kDAAkDE,qBAAsB,gBAAeH,uBAAwB;AAC/G;AACA;AACA;AACA,gDAAgDG,qBAAsB,gBAAeH,uBAAwB;AAC7G;AACA;AACA,gDAAgDG,qBAAsB,eAAcF,sBAAuB;AAC3G;AACA;AACA,YAAYI,eAAgB,kBAAiBD,SAAU;AACvD;AACA;IACI;EACF,CAAC,EAAE,uBAAuB,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}