{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0438\\u0440\\u0438\\u043B\\u043B\\\\Desktop\\\\gdfjtgj\\\\pears\\\\frontend\\\\src\\\\components\\\\swipes\\\\swipes.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from './card';\nimport css from \"./swipes.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Swipes = () => {\n  _s();\n  //we store users here\n  //don`t have redux yet, so useState hook only\n  const [characters, setCharacters] = useState([{\n    name: 'Richard Hendricks'\n  }, {\n    name: 'Erlich Bachman'\n  }, {\n    name: 'Monica Hall'\n  }, {\n    name: 'Jared Dunn'\n  }, {\n    name: 'Dinesh Chugtai'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.cardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), characters.map(char =>\n    /*#__PURE__*/\n    // name - just some random data for card. This is just an example, so only name\n    // name - какие-то данные для карточки. Т.к. пример это только, то только имя. Так-то стоит передавать весь объект\n    // setCharacters - передаем функцию для изменения массива пользователей\n    // setCharacters - pass a function that changes users state\n    _jsxDEV(Card, {\n      name: char.name,\n      setCharacters: setCharacters\n    }, char.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Swipes, \"BFzl+wj1qEen+ahrljVwwFmbHxQ=\");\n_c = Swipes;\nexport default Swipes;\nvar _c;\n$RefreshReg$(_c, \"Swipes\");","map":{"version":3,"names":["useState","Card","css","jsxDEV","_jsxDEV","Swipes","_s","characters","setCharacters","name","className","cardContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","char","_c","$RefreshReg$"],"sources":["C:/Users/Кирилл/Desktop/gdfjtgj/pears/frontend/src/components/swipes/swipes.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Card from './card';\r\nimport css from \"./swipes.module.css\";\r\n\r\nconst Swipes =() =>{\r\n\r\n    //we store users here\r\n    //don`t have redux yet, so useState hook only\r\n    const [characters, setCharacters] = useState([\r\n        {\r\n            name: 'Richard Hendricks',\r\n        },\r\n        {\r\n            name: 'Erlich Bachman',\r\n        },\r\n        {\r\n            name: 'Monica Hall',\r\n        },\r\n        {\r\n            name: 'Jared Dunn',\r\n        },\r\n        {\r\n            name: 'Dinesh Chugtai',\r\n        },\r\n    ]);\r\n\r\n    return(\r\n        <div className={css.cardContainer}>\r\n            <h1>Cards</h1>\r\n            {characters.map((char) =>\r\n            // name - just some random data for card. This is just an example, so only name\r\n            // name - какие-то данные для карточки. Т.к. пример это только, то только имя. Так-то стоит передавать весь объект\r\n            // setCharacters - передаем функцию для изменения массива пользователей\r\n            // setCharacters - pass a function that changes users state\r\n            <Card key={char.name} name={char.name} setCharacters={setCharacters}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Swipes;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAEf;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CACzC;IACIS,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;EAEF,oBACIL,OAAA;IAAKM,SAAS,EAAER,GAAG,CAACS,aAAc;IAAAC,QAAA,gBAC9BR,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACbT,UAAU,CAACU,GAAG,CAAEC,IAAI;IAAA;IACrB;IACA;IACA;IACA;IACAd,OAAA,CAACH,IAAI;MAAiBQ,IAAI,EAAES,IAAI,CAACT,IAAK;MAACD,aAAa,EAAEA;IAAc,GAAzDU,IAAI,CAACT,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAkD,CACrE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAAV,EAAA,CAlCKD,MAAM;AAAAc,EAAA,GAANd,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}