{"ast":null,"code":"import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\"AnimationStart\", \"AnimationComplete\", \"Update\", \"BeforeLayoutMeasure\", \"LayoutMeasure\", \"LayoutAnimationStart\", \"LayoutAnimationComplete\"];\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\nclass VisualElement {\n  constructor(_ref) {\n    let {\n      parent,\n      props,\n      reducedMotionConfig,\n      visualState\n    } = _ref;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    /**\r\n     * A reference to the current underlying Instance, e.g. a HTMLElement\r\n     * or Three.Mesh etc.\r\n     */\n    this.current = null;\n    /**\r\n     * A set containing references to this VisualElement's children.\r\n     */\n    this.children = new Set();\n    /**\r\n     * Determine what role this visual element should take in the variant tree.\r\n     */\n    this.isVariantNode = false;\n    this.isControllingVariants = false;\n    /**\r\n     * Decides whether this VisualElement should animate in reduced motion\r\n     * mode.\r\n     *\r\n     * TODO: This is currently set on every individual VisualElement but feels\r\n     * like it could be set globally.\r\n     */\n    this.shouldReduceMotion = null;\n    /**\r\n     * A map of all motion values attached to this visual element. Motion\r\n     * values are source of truth for any given animated value. A motion\r\n     * value might be provided externally by the component via props.\r\n     */\n    this.values = new Map();\n    /**\r\n     * Tracks whether this VisualElement's React component is currently present\r\n     * within the defined React tree.\r\n     */\n    this.isPresent = true;\n    /**\r\n     * A map of every subscription that binds the provided or generated\r\n     * motion values onChange listeners to this visual element.\r\n     */\n    this.valueSubscriptions = new Map();\n    /**\r\n     * A reference to the previously-provided motion values as returned\r\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n     * if any motion values need to be removed after props are updated.\r\n     */\n    this.prevMotionValues = {};\n    /**\r\n     * An object containing a SubscriptionManager for each active event.\r\n     */\n    this.events = {};\n    /**\r\n     * An object containing an unsubscribe function for each prop event subscription.\r\n     * For example, every \"Update\" event can have multiple subscribers via\r\n     * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n     */\n    this.propEventSubscriptions = {};\n    this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n    this.render = () => {\n      if (!this.current) return;\n      this.triggerBuild();\n      this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n    };\n    this.scheduleRender = () => sync.render(this.render, false, true);\n    const {\n      latestValues,\n      renderState\n    } = visualState;\n    this.latestValues = latestValues;\n    this.baseTarget = {\n      ...latestValues\n    };\n    this.initialValues = props.initial ? {\n      ...latestValues\n    } : {};\n    this.renderState = renderState;\n    this.parent = parent;\n    this.props = props;\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.reducedMotionConfig = reducedMotionConfig;\n    this.options = options;\n    this.isControllingVariants = isControllingVariants(props);\n    this.isVariantNode = isVariantNode(props);\n    if (this.isVariantNode) {\n      this.variantChildren = new Set();\n    }\n    this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n    /**\r\n     * Any motion values that are provided to the element when created\r\n     * aren't yet bound to the element, as this would technically be impure.\r\n     * However, we iterate through the motion values and set them to the\r\n     * initial values for this component.\r\n     *\r\n     * TODO: This is impure and we should look at changing this to run on mount.\r\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\r\n     * more a reflection of the test.\r\n     */\n    const {\n      willChange,\n      ...initialMotionValues\n    } = this.scrapeMotionValuesFromProps(props, {});\n    for (const key in initialMotionValues) {\n      const value = initialMotionValues[key];\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n        if (isWillChangeMotionValue(willChange)) {\n          willChange.add(key);\n        }\n      }\n    }\n  }\n  /**\r\n   * This method takes React props and returns found MotionValues. For example, HTML\r\n   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n   *\r\n   * This isn't an abstract method as it needs calling in the constructor, but it is\r\n   * intended to be one.\r\n   */\n  scrapeMotionValuesFromProps(_props, _prevProps) {\n    return {};\n  }\n  mount(instance) {\n    var _a;\n    this.current = instance;\n    if (this.projection) {\n      this.projection.mount(instance);\n    }\n    if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n      this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n    }\n    this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n    if (!hasReducedMotionListener.current) {\n      initPrefersReducedMotion();\n    }\n    this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? false : this.reducedMotionConfig === \"always\" ? true : prefersReducedMotion.current;\n    if (process.env.NODE_ENV !== \"production\") {\n      warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n    }\n    if (this.parent) this.parent.children.add(this);\n    this.setProps(this.props);\n  }\n  unmount() {\n    var _a, _b, _c;\n    (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n    cancelSync.update(this.notifyUpdate);\n    cancelSync.render(this.render);\n    this.valueSubscriptions.forEach(remove => remove());\n    (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n    (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n    for (const key in this.events) {\n      this.events[key].clear();\n    }\n    this.current = null;\n  }\n  bindToMotionValue(key, value) {\n    const valueIsTransform = transformProps.has(key);\n    const removeOnChange = value.on(\"change\", latestValue => {\n      this.latestValues[key] = latestValue;\n      this.props.onUpdate && sync.update(this.notifyUpdate, false, true);\n      if (valueIsTransform && this.projection) {\n        this.projection.isTransformDirty = true;\n      }\n    });\n    const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n    this.valueSubscriptions.set(key, () => {\n      removeOnChange();\n      removeOnRenderRequest();\n    });\n  }\n  sortNodePosition(other) {\n    /**\r\n     * If these nodes aren't even of the same type we can't compare their depth.\r\n     */\n    if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) return 0;\n    return this.sortInstanceNodePosition(this.current, other.current);\n  }\n  loadFeatures(_ref2, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n    let {\n      children,\n      ...renderedProps\n    } = _ref2;\n    const features = [];\n    /**\r\n     * If we're in development mode, check to make sure we're not rendering a motion component\r\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n     */\n    if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && isStrict) {\n      invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (let i = 0; i < numFeatures; i++) {\n      const name = featureNames[i];\n      const {\n        isEnabled,\n        Component\n      } = featureDefinitions[name];\n      /**\r\n       * It might be possible in the future to use this moment to\r\n       * dynamically request functionality. In initial tests this\r\n       * was producing a lot of duplication amongst bundles.\r\n       */\n      if (isEnabled(renderedProps) && Component) {\n        features.push(createElement(Component, {\n          key: name,\n          ...renderedProps,\n          visualElement: this\n        }));\n      }\n    }\n    if (!this.projection && ProjectionNodeConstructor) {\n      this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n      const {\n        layoutId,\n        layout,\n        drag,\n        dragConstraints,\n        layoutScroll,\n        layoutRoot\n      } = renderedProps;\n      this.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n        visualElement: this,\n        scheduleRender: () => this.scheduleRender(),\n        /**\r\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n         * to update by the time layout animations run.\r\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n         * ensuring it gets called if there's no potential layout animations.\r\n         *\r\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig: initialLayoutGroupConfig,\n        layoutScroll,\n        layoutRoot\n      });\n    }\n    return features;\n  }\n  triggerBuild() {\n    this.build(this.renderState, this.latestValues, this.options, this.props);\n  }\n  /**\r\n   * Measure the current viewport box with or without transforms.\r\n   * Only measures axis-aligned boxes, rotate and skew must be manually\r\n   * removed with a re-render to work.\r\n   */\n  measureViewportBox() {\n    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();\n  }\n  getStaticValue(key) {\n    return this.latestValues[key];\n  }\n  setStaticValue(key, value) {\n    this.latestValues[key] = value;\n  }\n  /**\r\n   * Make a target animatable by Popmotion. For instance, if we're\r\n   * trying to animate width from 100px to 100vw we need to measure 100vw\r\n   * in pixels to determine what we really need to animate to. This is also\r\n   * pluggable to support Framer's custom value types like Color,\r\n   * and CSS variables.\r\n   */\n  makeTargetAnimatable(target) {\n    let canMutate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n  }\n  /**\r\n   * Update the provided props. Ensure any newly-added motion values are\r\n   * added to our map, old ones removed, and listeners updated.\r\n   */\n  setProps(props) {\n    if (props.transformTemplate || this.props.transformTemplate) {\n      this.scheduleRender();\n    }\n    const prevProps = this.props;\n    this.props = props;\n    /**\r\n     * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n     */\n    for (let i = 0; i < propEventHandlers.length; i++) {\n      const key = propEventHandlers[i];\n      if (this.propEventSubscriptions[key]) {\n        this.propEventSubscriptions[key]();\n        delete this.propEventSubscriptions[key];\n      }\n      const listener = props[\"on\" + key];\n      if (listener) {\n        this.propEventSubscriptions[key] = this.on(key, listener);\n      }\n    }\n    this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n    if (this.handleChildMotionValue) {\n      this.handleChildMotionValue();\n    }\n  }\n  getProps() {\n    return this.props;\n  }\n  /**\r\n   * Returns the variant definition with a given name.\r\n   */\n  getVariant(name) {\n    var _a;\n    return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n  }\n  /**\r\n   * Returns the defined default transition on this component.\r\n   */\n  getDefaultTransition() {\n    return this.props.transition;\n  }\n  getTransformPagePoint() {\n    return this.props.transformPagePoint;\n  }\n  getClosestVariantNode() {\n    var _a;\n    return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n  }\n  getVariantContext() {\n    let startAtParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var _a, _b;\n    if (startAtParent) return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n    if (!this.isControllingVariants) {\n      const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n      if (this.props.initial !== undefined) {\n        context.initial = this.props.initial;\n      }\n      return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n      const name = variantProps[i];\n      const prop = this.props[name];\n      if (isVariantLabel(prop) || prop === false) {\n        context[name] = prop;\n      }\n    }\n    return context;\n  }\n  /**\r\n   * Add a child visual element to our set of children.\r\n   */\n  addVariantChild(child) {\n    var _a;\n    const closestVariantNode = this.getClosestVariantNode();\n    if (closestVariantNode) {\n      (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n      return () => closestVariantNode.variantChildren.delete(child);\n    }\n  }\n  /**\r\n   * Add a motion value and bind it to this visual element.\r\n   */\n  addValue(key, value) {\n    // Remove existing value if it exists\n    if (value !== this.values.get(key)) {\n      this.removeValue(key);\n      this.bindToMotionValue(key, value);\n    }\n    this.values.set(key, value);\n    this.latestValues[key] = value.get();\n  }\n  /**\r\n   * Remove a motion value and unbind any active subscriptions.\r\n   */\n  removeValue(key) {\n    var _a;\n    this.values.delete(key);\n    (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n    this.valueSubscriptions.delete(key);\n    delete this.latestValues[key];\n    this.removeValueFromRenderState(key, this.renderState);\n  }\n  /**\r\n   * Check whether we have a motion value for this key\r\n   */\n  hasValue(key) {\n    return this.values.has(key);\n  }\n  getValue(key, defaultValue) {\n    if (this.props.values && this.props.values[key]) {\n      return this.props.values[key];\n    }\n    let value = this.values.get(key);\n    if (value === undefined && defaultValue !== undefined) {\n      value = motionValue(defaultValue, {\n        owner: this\n      });\n      this.addValue(key, value);\n    }\n    return value;\n  }\n  /**\r\n   * If we're trying to animate to a previously unencountered value,\r\n   * we need to check for it in our state and as a last resort read it\r\n   * directly from the instance (which might have performance implications).\r\n   */\n  readValue(key) {\n    return this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : this.readValueFromInstance(this.current, key, this.options);\n  }\n  /**\r\n   * Set the base target to later animate back to. This is currently\r\n   * only hydrated on creation and when we first read a value.\r\n   */\n  setBaseTarget(key, value) {\n    this.baseTarget[key] = value;\n  }\n  /**\r\n   * Find the base target for a value thats been removed from all animation\r\n   * props.\r\n   */\n  getBaseTarget(key) {\n    var _a;\n    const {\n      initial\n    } = this.props;\n    const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\" ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key] : undefined;\n    /**\r\n     * If this value still exists in the current initial variant, read that.\r\n     */\n    if (initial && valueFromInitial !== undefined) {\n      return valueFromInitial;\n    }\n    /**\r\n     * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n     * so we can read the value from an alternative source, try that.\r\n     */\n    const target = this.getBaseTargetFromProps(this.props, key);\n    if (target !== undefined && !isMotionValue(target)) return target;\n    /**\r\n     * If the value was initially defined on initial, but it doesn't any more,\r\n     * return undefined. Otherwise return the value as initially read from the DOM.\r\n     */\n    return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];\n  }\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = new SubscriptionManager();\n    }\n    return this.events[eventName].add(callback);\n  }\n  notify(eventName) {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n  }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\nexport { VisualElement };","map":{"version":3,"names":["sync","cancelSync","invariant","createElement","featureDefinitions","createBox","isRefObject","initPrefersReducedMotion","hasReducedMotionListener","prefersReducedMotion","SubscriptionManager","motionValue","isWillChangeMotionValue","isMotionValue","transformProps","variantPriorityOrder","isControllingVariants","isVariantNode","isVariantLabel","updateMotionValuesFromProps","resolveVariantFromProps","warnOnce","featureNames","Object","keys","numFeatures","length","propEventHandlers","VisualElement","constructor","_ref","parent","props","reducedMotionConfig","visualState","options","arguments","undefined","current","children","Set","shouldReduceMotion","values","Map","isPresent","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","triggerBuild","renderInstance","renderState","style","projection","scheduleRender","baseTarget","initialValues","initial","depth","variantChildren","manuallyAnimateOnMount","Boolean","willChange","initialMotionValues","scrapeMotionValuesFromProps","key","value","set","add","_props","_prevProps","mount","instance","_a","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","process","env","NODE_ENV","setProps","unmount","_b","_c","update","remove","call","delete","clear","valueIsTransform","has","removeOnChange","on","latestValue","onUpdate","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","type","loadFeatures","_ref2","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","renderedProps","features","i","name","isEnabled","Component","push","visualElement","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureViewportBox","measureInstanceViewportBox","getStaticValue","setStaticValue","makeTargetAnimatable","target","canMutate","makeTargetAnimatableFromInstance","transformTemplate","prevProps","listener","handleChildMotionValue","getProps","getVariant","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","numVariantProps","variantProps","prop","child","closestVariantNode","addValue","get","removeValue","removeValueFromRenderState","hasValue","getValue","defaultValue","owner","readValue","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","getBaseTargetFromProps","eventName","callback","_len","args","Array","_key"],"sources":["C:/Users/Кирилл/Desktop/gdfjtgj/pears/frontend/node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { sync, cancelSync } from '../frameloop/index.mjs';\r\nimport { invariant } from 'hey-listen';\r\nimport { createElement } from 'react';\r\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\r\nimport { createBox } from '../projection/geometry/models.mjs';\r\nimport { isRefObject } from '../utils/is-ref-object.mjs';\r\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { motionValue } from '../value/index.mjs';\r\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\r\nimport { transformProps } from './html/utils/transform.mjs';\r\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\r\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\r\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\r\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\n\r\nconst featureNames = Object.keys(featureDefinitions);\r\nconst numFeatures = featureNames.length;\r\nconst propEventHandlers = [\r\n    \"AnimationStart\",\r\n    \"AnimationComplete\",\r\n    \"Update\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutMeasure\",\r\n    \"LayoutAnimationStart\",\r\n    \"LayoutAnimationComplete\",\r\n];\r\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\r\nclass VisualElement {\r\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\r\n        /**\r\n         * A reference to the current underlying Instance, e.g. a HTMLElement\r\n         * or Three.Mesh etc.\r\n         */\r\n        this.current = null;\r\n        /**\r\n         * A set containing references to this VisualElement's children.\r\n         */\r\n        this.children = new Set();\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        this.isVariantNode = false;\r\n        this.isControllingVariants = false;\r\n        /**\r\n         * Decides whether this VisualElement should animate in reduced motion\r\n         * mode.\r\n         *\r\n         * TODO: This is currently set on every individual VisualElement but feels\r\n         * like it could be set globally.\r\n         */\r\n        this.shouldReduceMotion = null;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        this.values = new Map();\r\n        /**\r\n         * Tracks whether this VisualElement's React component is currently present\r\n         * within the defined React tree.\r\n         */\r\n        this.isPresent = true;\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        this.valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        this.prevMotionValues = {};\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        /**\r\n         * An object containing an unsubscribe function for each prop event subscription.\r\n         * For example, every \"Update\" event can have multiple subscribers via\r\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n         */\r\n        this.propEventSubscriptions = {};\r\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\r\n        this.render = () => {\r\n            if (!this.current)\r\n                return;\r\n            this.triggerBuild();\r\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\r\n        };\r\n        this.scheduleRender = () => sync.render(this.render, false, true);\r\n        const { latestValues, renderState } = visualState;\r\n        this.latestValues = latestValues;\r\n        this.baseTarget = { ...latestValues };\r\n        this.initialValues = props.initial ? { ...latestValues } : {};\r\n        this.renderState = renderState;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.depth = parent ? parent.depth + 1 : 0;\r\n        this.reducedMotionConfig = reducedMotionConfig;\r\n        this.options = options;\r\n        this.isControllingVariants = isControllingVariants(props);\r\n        this.isVariantNode = isVariantNode(props);\r\n        if (this.isVariantNode) {\r\n            this.variantChildren = new Set();\r\n        }\r\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\r\n        for (const key in initialMotionValues) {\r\n            const value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n                if (isWillChangeMotionValue(willChange)) {\r\n                    willChange.add(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * This method takes React props and returns found MotionValues. For example, HTML\r\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n     *\r\n     * This isn't an abstract method as it needs calling in the constructor, but it is\r\n     * intended to be one.\r\n     */\r\n    scrapeMotionValuesFromProps(_props, _prevProps) {\r\n        return {};\r\n    }\r\n    mount(instance) {\r\n        var _a;\r\n        this.current = instance;\r\n        if (this.projection) {\r\n            this.projection.mount(instance);\r\n        }\r\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\r\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\r\n        }\r\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\r\n        if (!hasReducedMotionListener.current) {\r\n            initPrefersReducedMotion();\r\n        }\r\n        this.shouldReduceMotion =\r\n            this.reducedMotionConfig === \"never\"\r\n                ? false\r\n                : this.reducedMotionConfig === \"always\"\r\n                    ? true\r\n                    : prefersReducedMotion.current;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\r\n        }\r\n        if (this.parent)\r\n            this.parent.children.add(this);\r\n        this.setProps(this.props);\r\n    }\r\n    unmount() {\r\n        var _a, _b, _c;\r\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\r\n        cancelSync.update(this.notifyUpdate);\r\n        cancelSync.render(this.render);\r\n        this.valueSubscriptions.forEach((remove) => remove());\r\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\r\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\r\n        for (const key in this.events) {\r\n            this.events[key].clear();\r\n        }\r\n        this.current = null;\r\n    }\r\n    bindToMotionValue(key, value) {\r\n        const valueIsTransform = transformProps.has(key);\r\n        const removeOnChange = value.on(\"change\", (latestValue) => {\r\n            this.latestValues[key] = latestValue;\r\n            this.props.onUpdate &&\r\n                sync.update(this.notifyUpdate, false, true);\r\n            if (valueIsTransform && this.projection) {\r\n                this.projection.isTransformDirty = true;\r\n            }\r\n        });\r\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\r\n        this.valueSubscriptions.set(key, () => {\r\n            removeOnChange();\r\n            removeOnRenderRequest();\r\n        });\r\n    }\r\n    sortNodePosition(other) {\r\n        /**\r\n         * If these nodes aren't even of the same type we can't compare their depth.\r\n         */\r\n        if (!this.current ||\r\n            !this.sortInstanceNodePosition ||\r\n            this.type !== other.type)\r\n            return 0;\r\n        return this.sortInstanceNodePosition(this.current, other.current);\r\n    }\r\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\r\n        const features = [];\r\n        /**\r\n         * If we're in development mode, check to make sure we're not rendering a motion component\r\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n         */\r\n        if (process.env.NODE_ENV !== \"production\" &&\r\n            preloadedFeatures &&\r\n            isStrict) {\r\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\r\n        }\r\n        for (let i = 0; i < numFeatures; i++) {\r\n            const name = featureNames[i];\r\n            const { isEnabled, Component } = featureDefinitions[name];\r\n            /**\r\n             * It might be possible in the future to use this moment to\r\n             * dynamically request functionality. In initial tests this\r\n             * was producing a lot of duplication amongst bundles.\r\n             */\r\n            if (isEnabled(renderedProps) && Component) {\r\n                features.push(createElement(Component, {\r\n                    key: name,\r\n                    ...renderedProps,\r\n                    visualElement: this,\r\n                }));\r\n            }\r\n        }\r\n        if (!this.projection && ProjectionNodeConstructor) {\r\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\r\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\r\n            this.projection.setOptions({\r\n                layoutId,\r\n                layout,\r\n                alwaysMeasureLayout: Boolean(drag) ||\r\n                    (dragConstraints && isRefObject(dragConstraints)),\r\n                visualElement: this,\r\n                scheduleRender: () => this.scheduleRender(),\r\n                /**\r\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n                 * to update by the time layout animations run.\r\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n                 * ensuring it gets called if there's no potential layout animations.\r\n                 *\r\n                 */\r\n                animationType: typeof layout === \"string\" ? layout : \"both\",\r\n                initialPromotionConfig: initialLayoutGroupConfig,\r\n                layoutScroll,\r\n                layoutRoot,\r\n            });\r\n        }\r\n        return features;\r\n    }\r\n    triggerBuild() {\r\n        this.build(this.renderState, this.latestValues, this.options, this.props);\r\n    }\r\n    /**\r\n     * Measure the current viewport box with or without transforms.\r\n     * Only measures axis-aligned boxes, rotate and skew must be manually\r\n     * removed with a re-render to work.\r\n     */\r\n    measureViewportBox() {\r\n        return this.current\r\n            ? this.measureInstanceViewportBox(this.current, this.props)\r\n            : createBox();\r\n    }\r\n    getStaticValue(key) {\r\n        return this.latestValues[key];\r\n    }\r\n    setStaticValue(key, value) {\r\n        this.latestValues[key] = value;\r\n    }\r\n    /**\r\n     * Make a target animatable by Popmotion. For instance, if we're\r\n     * trying to animate width from 100px to 100vw we need to measure 100vw\r\n     * in pixels to determine what we really need to animate to. This is also\r\n     * pluggable to support Framer's custom value types like Color,\r\n     * and CSS variables.\r\n     */\r\n    makeTargetAnimatable(target, canMutate = true) {\r\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\r\n    }\r\n    /**\r\n     * Update the provided props. Ensure any newly-added motion values are\r\n     * added to our map, old ones removed, and listeners updated.\r\n     */\r\n    setProps(props) {\r\n        if (props.transformTemplate || this.props.transformTemplate) {\r\n            this.scheduleRender();\r\n        }\r\n        const prevProps = this.props;\r\n        this.props = props;\r\n        /**\r\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n         */\r\n        for (let i = 0; i < propEventHandlers.length; i++) {\r\n            const key = propEventHandlers[i];\r\n            if (this.propEventSubscriptions[key]) {\r\n                this.propEventSubscriptions[key]();\r\n                delete this.propEventSubscriptions[key];\r\n            }\r\n            const listener = props[\"on\" + key];\r\n            if (listener) {\r\n                this.propEventSubscriptions[key] = this.on(key, listener);\r\n            }\r\n        }\r\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\r\n        if (this.handleChildMotionValue) {\r\n            this.handleChildMotionValue();\r\n        }\r\n    }\r\n    getProps() {\r\n        return this.props;\r\n    }\r\n    /**\r\n     * Returns the variant definition with a given name.\r\n     */\r\n    getVariant(name) {\r\n        var _a;\r\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\r\n    }\r\n    /**\r\n     * Returns the defined default transition on this component.\r\n     */\r\n    getDefaultTransition() {\r\n        return this.props.transition;\r\n    }\r\n    getTransformPagePoint() {\r\n        return this.props.transformPagePoint;\r\n    }\r\n    getClosestVariantNode() {\r\n        var _a;\r\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\r\n    }\r\n    getVariantContext(startAtParent = false) {\r\n        var _a, _b;\r\n        if (startAtParent)\r\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\r\n        if (!this.isControllingVariants) {\r\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\r\n            if (this.props.initial !== undefined) {\r\n                context.initial = this.props.initial;\r\n            }\r\n            return context;\r\n        }\r\n        const context = {};\r\n        for (let i = 0; i < numVariantProps; i++) {\r\n            const name = variantProps[i];\r\n            const prop = this.props[name];\r\n            if (isVariantLabel(prop) || prop === false) {\r\n                context[name] = prop;\r\n            }\r\n        }\r\n        return context;\r\n    }\r\n    /**\r\n     * Add a child visual element to our set of children.\r\n     */\r\n    addVariantChild(child) {\r\n        var _a;\r\n        const closestVariantNode = this.getClosestVariantNode();\r\n        if (closestVariantNode) {\r\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\r\n            return () => closestVariantNode.variantChildren.delete(child);\r\n        }\r\n    }\r\n    /**\r\n     * Add a motion value and bind it to this visual element.\r\n     */\r\n    addValue(key, value) {\r\n        // Remove existing value if it exists\r\n        if (value !== this.values.get(key)) {\r\n            this.removeValue(key);\r\n            this.bindToMotionValue(key, value);\r\n        }\r\n        this.values.set(key, value);\r\n        this.latestValues[key] = value.get();\r\n    }\r\n    /**\r\n     * Remove a motion value and unbind any active subscriptions.\r\n     */\r\n    removeValue(key) {\r\n        var _a;\r\n        this.values.delete(key);\r\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\r\n        this.valueSubscriptions.delete(key);\r\n        delete this.latestValues[key];\r\n        this.removeValueFromRenderState(key, this.renderState);\r\n    }\r\n    /**\r\n     * Check whether we have a motion value for this key\r\n     */\r\n    hasValue(key) {\r\n        return this.values.has(key);\r\n    }\r\n    getValue(key, defaultValue) {\r\n        if (this.props.values && this.props.values[key]) {\r\n            return this.props.values[key];\r\n        }\r\n        let value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = motionValue(defaultValue, { owner: this });\r\n            this.addValue(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * If we're trying to animate to a previously unencountered value,\r\n     * we need to check for it in our state and as a last resort read it\r\n     * directly from the instance (which might have performance implications).\r\n     */\r\n    readValue(key) {\r\n        return this.latestValues[key] !== undefined || !this.current\r\n            ? this.latestValues[key]\r\n            : this.readValueFromInstance(this.current, key, this.options);\r\n    }\r\n    /**\r\n     * Set the base target to later animate back to. This is currently\r\n     * only hydrated on creation and when we first read a value.\r\n     */\r\n    setBaseTarget(key, value) {\r\n        this.baseTarget[key] = value;\r\n    }\r\n    /**\r\n     * Find the base target for a value thats been removed from all animation\r\n     * props.\r\n     */\r\n    getBaseTarget(key) {\r\n        var _a;\r\n        const { initial } = this.props;\r\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\r\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\r\n            : undefined;\r\n        /**\r\n         * If this value still exists in the current initial variant, read that.\r\n         */\r\n        if (initial && valueFromInitial !== undefined) {\r\n            return valueFromInitial;\r\n        }\r\n        /**\r\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n         * so we can read the value from an alternative source, try that.\r\n         */\r\n        const target = this.getBaseTargetFromProps(this.props, key);\r\n        if (target !== undefined && !isMotionValue(target))\r\n            return target;\r\n        /**\r\n         * If the value was initially defined on initial, but it doesn't any more,\r\n         * return undefined. Otherwise return the value as initially read from the DOM.\r\n         */\r\n        return this.initialValues[key] !== undefined &&\r\n            valueFromInitial === undefined\r\n            ? undefined\r\n            : this.baseTarget[key];\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        return this.events[eventName].add(callback);\r\n    }\r\n    notify(eventName, ...args) {\r\n        var _a;\r\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\r\n    }\r\n}\r\nconst variantProps = [\"initial\", ...variantPriorityOrder];\r\nconst numVariantProps = variantProps.length;\r\n\r\nexport { VisualElement };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}