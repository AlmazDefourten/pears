{"ast":null,"code":"// Source from https://github.com/alitaheri/normalize-scroll-left\nlet cachedType;\n\n/**\r\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\n *\r\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\r\n *\r\n * Type             | <- Most Left | Most Right -> | Initial\r\n * ---------------- | ------------ | ------------- | -------\r\n * default          | 0            | 100           | 100\r\n * negative (spec*) | -100         | 0             | 0\r\n * reverse          | 100          | 0             | 0\r\n *\r\n * Edge 85: default\r\n * Safari 14: negative\r\n * Chrome 85: negative\r\n * Firefox 81: negative\r\n * IE11: reverse\r\n *\r\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\r\n */\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n  const dummy = document.createElement('div');\n  const container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n  document.body.removeChild(dummy);\n  return cachedType;\n}\n\n// Based on https://stackoverflow.com/a/24394376\nexport function getNormalizedScrollLeft(element, direction) {\n  const scrollLeft = element.scrollLeft;\n\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  const type = detectScrollType();\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n    default:\n      return scrollLeft;\n  }\n}","map":{"version":3,"names":["cachedType","detectScrollType","dummy","document","createElement","container","style","width","height","appendChild","dir","fontSize","position","top","overflow","body","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","type","scrollWidth","clientWidth"],"sources":["C:/Users/Кирилл/Desktop/here/pears/frontend/node_modules/@mui/utils/esm/scrollLeft.js"],"sourcesContent":["// Source from https://github.com/alitaheri/normalize-scroll-left\r\nlet cachedType;\r\n\r\n/**\r\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\n *\r\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\r\n *\r\n * Type             | <- Most Left | Most Right -> | Initial\r\n * ---------------- | ------------ | ------------- | -------\r\n * default          | 0            | 100           | 100\r\n * negative (spec*) | -100         | 0             | 0\r\n * reverse          | 100          | 0             | 0\r\n *\r\n * Edge 85: default\r\n * Safari 14: negative\r\n * Chrome 85: negative\r\n * Firefox 81: negative\r\n * IE11: reverse\r\n *\r\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\r\n */\r\nexport function detectScrollType() {\r\n  if (cachedType) {\r\n    return cachedType;\r\n  }\r\n  const dummy = document.createElement('div');\r\n  const container = document.createElement('div');\r\n  container.style.width = '10px';\r\n  container.style.height = '1px';\r\n  dummy.appendChild(container);\r\n  dummy.dir = 'rtl';\r\n  dummy.style.fontSize = '14px';\r\n  dummy.style.width = '4px';\r\n  dummy.style.height = '1px';\r\n  dummy.style.position = 'absolute';\r\n  dummy.style.top = '-1000px';\r\n  dummy.style.overflow = 'scroll';\r\n  document.body.appendChild(dummy);\r\n  cachedType = 'reverse';\r\n  if (dummy.scrollLeft > 0) {\r\n    cachedType = 'default';\r\n  } else {\r\n    dummy.scrollLeft = 1;\r\n    if (dummy.scrollLeft === 0) {\r\n      cachedType = 'negative';\r\n    }\r\n  }\r\n  document.body.removeChild(dummy);\r\n  return cachedType;\r\n}\r\n\r\n// Based on https://stackoverflow.com/a/24394376\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n  const scrollLeft = element.scrollLeft;\r\n\r\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\r\n  if (direction !== 'rtl') {\r\n    return scrollLeft;\r\n  }\r\n  const type = detectScrollType();\r\n  switch (type) {\r\n    case 'negative':\r\n      return element.scrollWidth - element.clientWidth + scrollLeft;\r\n    case 'reverse':\r\n      return element.scrollWidth - element.clientWidth - scrollLeft;\r\n    default:\r\n      return scrollLeft;\r\n  }\r\n}"],"mappings":"AAAA;AACA,IAAIA,UAAU;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,IAAID,UAAU,EAAE;IACd,OAAOA,UAAU;EACnB;EACA,MAAME,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3C,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CC,SAAS,CAACC,KAAK,CAACC,KAAK,GAAG,MAAM;EAC9BF,SAAS,CAACC,KAAK,CAACE,MAAM,GAAG,KAAK;EAC9BN,KAAK,CAACO,WAAW,CAACJ,SAAS,CAAC;EAC5BH,KAAK,CAACQ,GAAG,GAAG,KAAK;EACjBR,KAAK,CAACI,KAAK,CAACK,QAAQ,GAAG,MAAM;EAC7BT,KAAK,CAACI,KAAK,CAACC,KAAK,GAAG,KAAK;EACzBL,KAAK,CAACI,KAAK,CAACE,MAAM,GAAG,KAAK;EAC1BN,KAAK,CAACI,KAAK,CAACM,QAAQ,GAAG,UAAU;EACjCV,KAAK,CAACI,KAAK,CAACO,GAAG,GAAG,SAAS;EAC3BX,KAAK,CAACI,KAAK,CAACQ,QAAQ,GAAG,QAAQ;EAC/BX,QAAQ,CAACY,IAAI,CAACN,WAAW,CAACP,KAAK,CAAC;EAChCF,UAAU,GAAG,SAAS;EACtB,IAAIE,KAAK,CAACc,UAAU,GAAG,CAAC,EAAE;IACxBhB,UAAU,GAAG,SAAS;EACxB,CAAC,MAAM;IACLE,KAAK,CAACc,UAAU,GAAG,CAAC;IACpB,IAAId,KAAK,CAACc,UAAU,KAAK,CAAC,EAAE;MAC1BhB,UAAU,GAAG,UAAU;IACzB;EACF;EACAG,QAAQ,CAACY,IAAI,CAACE,WAAW,CAACf,KAAK,CAAC;EAChC,OAAOF,UAAU;AACnB;;AAEA;AACA,OAAO,SAASkB,uBAAuBA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC1D,MAAMJ,UAAU,GAAGG,OAAO,CAACH,UAAU;;EAErC;EACA,IAAII,SAAS,KAAK,KAAK,EAAE;IACvB,OAAOJ,UAAU;EACnB;EACA,MAAMK,IAAI,GAAGpB,gBAAgB,EAAE;EAC/B,QAAQoB,IAAI;IACV,KAAK,UAAU;MACb,OAAOF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,GAAGP,UAAU;IAC/D,KAAK,SAAS;MACZ,OAAOG,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,GAAGP,UAAU;IAC/D;MACE,OAAOA,UAAU;EAAC;AAExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}