{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0438\\u0440\\u0438\\u043B\\u043B\\\\Desktop\\\\here\\\\pears\\\\frontend\\\\src\\\\components\\\\auth-page\\\\form\\\\auth-form.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useForm, Controller, useFormState } from 'react-hook-form';\nimport '../auth-page.css';\nimport { loginValidation, passwordValidation } from '../validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthForm = _ref => {\n  _s();\n  let {\n    setRender\n  } = _ref;\n  const {\n    handleSubmit,\n    control\n  } = useForm(); // useForm is a custom hook for managing forms with ease. It takes one object as optional argument\n  const onSubmit = data => fetch(\"http://localhost:8080/user/authorization\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      login: data.login,\n      password: data.password\n    })\n  }).then(res => res.json()).then(result => {\n    console.log(result);\n  }, error => {\n    console.log(error);\n  }); // Validation will trigger on the submit event and inputs will attach onChange event listeners to re-validate them.\n  const {\n    errors\n  } = useFormState({\n    // This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level\n    control\n  });\n  return (\n    /*#__PURE__*/\n    // Typography - Tag for text from MUI\n    // Controller - Avoids problems with external controlled components. In our case with MUI\n    // TextField - Text Fields let users enter and edit text\n    _jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        className: \"auth-form__subtitle\",\n        children: \"\\u041F\\u0440\\u0438\\u043A\\u043E\\u0441\\u043D\\u0438\\u0441\\u044C \\u043A \\u0431\\u0443\\u0434\\u0443\\u0449\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form__form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control // This object contains methods for registering components into React Hook Form\n          ,\n          name: \"login\",\n          rules: loginValidation // The rules for validation are in the validation.ts file\n          ,\n          render: _ref2 => {\n            var _errors$login, _errors$login2;\n            let {\n              field\n            } = _ref2;\n            return (\n              /*#__PURE__*/\n              // render - A function that returns a React element and provides the ability to attach events and value into the component\n              _jsxDEV(TextField, {\n                label: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n                size: \"small\",\n                className: \"auth-form__input\",\n                fullWidth: true,\n                onChange: e => field.onChange(e),\n                value: field.value,\n                error: !!((_errors$login = errors.login) !== null && _errors$login !== void 0 && _errors$login.message),\n                helperText: errors === null || errors === void 0 ? void 0 : (_errors$login2 = errors.login) === null || _errors$login2 === void 0 ? void 0 : _errors$login2.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)\n            );\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"password\",\n          rules: passwordValidation // The rules for validation are in the validation.ts file\n          ,\n          render: _ref3 => {\n            var _errors$password, _errors$password2;\n            let {\n              field\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              type: \"password\",\n              size: \"small\",\n              margin: \"normal\",\n              className: \"auth-form__input\",\n              fullWidth: true,\n              onChange: e => field.onChange(e),\n              value: field.value,\n              error: !!(errors !== null && errors !== void 0 && (_errors$password = errors.password) !== null && _errors$password !== void 0 && _errors$password.message),\n              helperText: errors === null || errors === void 0 ? void 0 : (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          fullWidth: true,\n          disableElevation: true,\n          sx: {\n            // The system prop that allows defining system overrides as well as additional CSS styles\n            marginTop: 2\n          },\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form__footer\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"span\",\n          children: [\"\\u041D\\u0435\\u0442\\u0443 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"span\",\n          className: \"link\",\n          onClick: () => setRender(\"reg\"),\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthForm, \"kP/QK6oUiiBiNf9rYBCosINo2GE=\", false, function () {\n  return [useForm, useFormState];\n});\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","Typography","TextField","Button","useForm","Controller","useFormState","loginValidation","passwordValidation","jsxDEV","_jsxDEV","AuthForm","_ref","_s","setRender","handleSubmit","control","onSubmit","data","fetch","method","headers","body","JSON","stringify","login","password","then","res","json","result","console","log","error","errors","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","name","rules","render","_ref2","_errors$login","_errors$login2","field","label","size","fullWidth","onChange","e","value","message","helperText","_ref3","_errors$password","_errors$password2","type","margin","disableElevation","sx","marginTop","component","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Кирилл/Desktop/here/pears/frontend/src/components/auth-page/form/auth-form.tsx"],"sourcesContent":["import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { useForm, Controller, SubmitHandler, useFormState } from 'react-hook-form';\r\nimport '../auth-page.css';\r\nimport { loginValidation, passwordValidation } from '../validation';\r\n\r\ninterface ISignInForm {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\ninterface IComp{\r\n    setRender: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const AuthForm = ({setRender}:  IComp) => {\r\n    const { handleSubmit, control} = useForm<ISignInForm>(); // useForm is a custom hook for managing forms with ease. It takes one object as optional argument\r\n    const onSubmit: SubmitHandler<ISignInForm> = data => fetch(\"http://localhost:8080/user/authorization\",\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                    login: data.login,\r\n                    password: data.password,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }); // Validation will trigger on the submit event and inputs will attach onChange event listeners to re-validate them.\r\n    const { errors } = useFormState({ // This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level\r\n        control\r\n    })\r\n\r\n    return (\r\n        // Typography - Tag for text from MUI\r\n        // Controller - Avoids problems with external controlled components. In our case with MUI\r\n        // TextField - Text Fields let users enter and edit text\r\n\r\n        <div className='auth-form'>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Вход\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" gutterBottom className=\"auth-form__subtitle\"> \r\n                Прикоснись к будущему\r\n            </Typography>\r\n            {/* handleSubmit - This function will receive the form data if form validation is successful */}\r\n            <form className=\"auth-form__form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Controller\r\n                    control={ control } // This object contains methods for registering components into React Hook Form\r\n                    name=\"login\" \r\n                    rules={loginValidation} // The rules for validation are in the validation.ts file\r\n                    render={({ field }) => ( // render - A function that returns a React element and provides the ability to attach events and value into the component\r\n                        <TextField\r\n                            label=\"Логин\"\r\n                            size=\"small\"\r\n                            className=\"auth-form__input\"\r\n                            fullWidth={ true }\r\n                            onChange={(e) => field.onChange(e)}\r\n                            value={ field.value }\r\n                            error={ !!errors.login?.message }\r\n                            helperText={ errors?.login?.message }\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    control={ control }\r\n                    name=\"password\"\r\n                    rules={passwordValidation} // The rules for validation are in the validation.ts file\r\n                    render={({ field }) => (\r\n                        <TextField\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            className=\"auth-form__input\"\r\n                            fullWidth={ true }\r\n                            onChange={(e) => field.onChange(e)}\r\n                            value={ field.value }\r\n                            error={ !!errors?.password?.message }\r\n                            helperText={ errors?.password?.message }\r\n                        />\r\n                    )}\r\n                />\r\n                \r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='contained'\r\n                    fullWidth={ true }\r\n                    disableElevation={ true }\r\n                    sx={{ // The system prop that allows defining system overrides as well as additional CSS styles\r\n                        marginTop: 2\r\n                    }} \r\n                >\r\n                    Войти\r\n                </Button>\r\n            </form>\r\n            <div className=\"auth-form__footer\">\r\n                <Typography variant=\"subtitle1\" component=\"span\">\r\n                    Нету аккаунта?{\" \"}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" component=\"span\" className='link' onClick={() => setRender(\"reg\")}>\r\n                    Зарегистрируйтесь\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}