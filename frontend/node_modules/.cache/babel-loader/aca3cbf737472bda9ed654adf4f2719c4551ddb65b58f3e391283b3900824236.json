{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nvar _span;\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [\n    // Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n\n/**\r\n * @ignore - internal component.\r\n */\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-label': ariaLabel,\n      autoFocus,\n      autoWidth,\n      children,\n      className,\n      defaultOpen,\n      defaultValue,\n      disabled,\n      displayEmpty,\n      IconComponent,\n      inputRef: inputRefProp,\n      labelId,\n      MenuProps = {},\n      multiple,\n      name,\n      onBlur,\n      onChange,\n      onClose,\n      onFocus,\n      onOpen,\n      open: openProp,\n      readOnly,\n      renderValue,\n      SelectDisplayProps = {},\n      tabIndex: tabIndexProp,\n      value: valueProp,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n\n  // Resize menu on `defaultOpen` automatic toggle.\n  React.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      displayRef.current.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayNode, autoWidth]);\n  // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n    return undefined;\n  }, [labelId]);\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      setOpenState(open);\n    }\n  };\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    }\n    // Hijack the default focus behavior.\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n  const handleClose = event => {\n    update(false, event);\n  };\n  const childrenArray = React.Children.toArray(children);\n\n  // Support autofill.\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n    if (index === -1) {\n      return;\n    }\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n  const handleItemClick = child => event => {\n    let newValue;\n\n    // We use the tabindex attribute to signal the available options.\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n    if (value !== newValue) {\n      setValueState(newValue);\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown',\n      // The native select doesn't respond to enter on macOS, but it's recommended by\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n      'Enter'];\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n  const open = displayNode !== null && openState;\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false;\n\n  // No need to display any value if the field is empty.\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    let selected;\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n      selected = value.some(v => areEqualValues(v, child.props.value));\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n    if (selected) {\n      foundMatch = true;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n          if (index < displayMultiple.length - 1) {\n            output.push(', ');\n          }\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  }\n\n  // Avoid performing a layout computation in the render method.\n  let menuMinWidth = menuMinWidthState;\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = anchorElement.clientWidth;\n  }\n  let tabIndex;\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(SelectDisplayProps.className, classes.select, className)\n      // The id is required for proper a11y\n      ,\n\n      id: buttonId,\n      children: isEmpty(display) ?\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      })) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: anchorElement,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\r\n   * @ignore\r\n   */\n  'aria-describedby': PropTypes.string,\n  /**\r\n   * @ignore\r\n   */\n  'aria-label': PropTypes.string,\n  /**\r\n   * @ignore\r\n   */\n  autoFocus: PropTypes.bool,\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\n  autoWidth: PropTypes.bool,\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * The CSS class name of the select element.\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\r\n   * You can only use it when the `native` prop is `false` (default).\r\n   */\n  defaultOpen: PropTypes.bool,\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\n  defaultValue: PropTypes.any,\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\n  disabled: PropTypes.bool,\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\n  displayEmpty: PropTypes.bool,\n  /**\r\n   * The icon that displays the arrow.\r\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\n  inputRef: refType,\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\n  labelId: PropTypes.string,\n  /**\r\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\r\n   */\n  MenuProps: PropTypes.object,\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\n  multiple: PropTypes.bool,\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\n  name: PropTypes.string,\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\n  onChange: PropTypes.func,\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n  /**\r\n   * @ignore\r\n   */\n  readOnly: PropTypes.bool,\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\n  renderValue: PropTypes.func,\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\n  SelectDisplayProps: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\r\n   * @ignore\r\n   */\n  type: PropTypes.any,\n  /**\r\n   * The input value.\r\n   */\n  value: PropTypes.any,\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_span","_excluded","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","refType","ownerDocument","capitalize","Menu","nativeSelectSelectStyles","nativeSelectIconStyles","isFilled","styled","slotShouldForwardProp","useForkRef","useControlled","selectClasses","getSelectUtilityClasses","jsx","_jsx","jsxs","_jsxs","SelectSelect","name","slot","overridesResolver","props","styles","ownerState","select","variant","multiple","height","minHeight","textOverflow","whiteSpace","overflow","SelectIcon","icon","open","iconOpen","SelectNativeInput","shouldForwardProp","prop","nativeInput","bottom","left","position","opacity","pointerEvents","width","boxSizing","areEqualValues","a","b","String","isEmpty","display","trim","useUtilityClasses","classes","disabled","slots","SelectInput","forwardRef","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","onBlur","onChange","onClose","onFocus","onOpen","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","other","setValueState","controlled","default","openState","setOpenState","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","handleRef","handleDisplayRef","useCallback","node","anchorElement","parentNode","useImperativeHandle","focus","useEffect","clientWidth","undefined","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","update","event","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","currentTarget","hasAttribute","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","length","reduce","output","menuMinWidth","buttonId","id","Fragment","Boolean","onKeyDown","onMouseDown","as","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","any","elementType","isRequired","func","oneOfType","number","oneOf"],"sources":["C:/Users/Кирилл/Desktop/Новая папка (2)/luioi/pears/frontend/node_modules/@mui/material/Select/SelectInput.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\r\nvar _span;\r\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { refType } from '@mui/utils';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport capitalize from '../utils/capitalize';\r\nimport Menu from '../Menu/Menu';\r\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\r\nimport { isFilled } from '../InputBase/utils';\r\nimport styled, { slotShouldForwardProp } from '../styles/styled';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useControlled from '../utils/useControlled';\r\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst SelectSelect = styled('div', {\r\n  name: 'MuiSelect',\r\n  slot: 'Select',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [\r\n    // Win specificity over the input base\r\n    {\r\n      [`&.${selectClasses.select}`]: styles.select\r\n    }, {\r\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\r\n    }, {\r\n      [`&.${selectClasses.multiple}`]: styles.multiple\r\n    }];\r\n  }\r\n})(nativeSelectSelectStyles, {\r\n  // Win specificity over the input base\r\n  [`&.${selectClasses.select}`]: {\r\n    height: 'auto',\r\n    // Resets for multiple select with chips\r\n    minHeight: '1.4375em',\r\n    // Required for select\\text-field height consistency\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden'\r\n  }\r\n});\r\nconst SelectIcon = styled('svg', {\r\n  name: 'MuiSelect',\r\n  slot: 'Icon',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\r\n  }\r\n})(nativeSelectIconStyles);\r\nconst SelectNativeInput = styled('input', {\r\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\r\n  name: 'MuiSelect',\r\n  slot: 'NativeInput',\r\n  overridesResolver: (props, styles) => styles.nativeInput\r\n})({\r\n  bottom: 0,\r\n  left: 0,\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  pointerEvents: 'none',\r\n  width: '100%',\r\n  boxSizing: 'border-box'\r\n});\r\nfunction areEqualValues(a, b) {\r\n  if (typeof b === 'object' && b !== null) {\r\n    return a === b;\r\n  }\r\n\r\n  // The value could be a number, the DOM will stringify it anyway.\r\n  return String(a) === String(b);\r\n}\r\nfunction isEmpty(display) {\r\n  return display == null || typeof display === 'string' && !display.trim();\r\n}\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    variant,\r\n    disabled,\r\n    multiple,\r\n    open\r\n  } = ownerState;\r\n  const slots = {\r\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\r\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\r\n    nativeInput: ['nativeInput']\r\n  };\r\n  return composeClasses(slots, getSelectUtilityClasses, classes);\r\n};\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\r\n  const {\r\n      'aria-describedby': ariaDescribedby,\r\n      'aria-label': ariaLabel,\r\n      autoFocus,\r\n      autoWidth,\r\n      children,\r\n      className,\r\n      defaultOpen,\r\n      defaultValue,\r\n      disabled,\r\n      displayEmpty,\r\n      IconComponent,\r\n      inputRef: inputRefProp,\r\n      labelId,\r\n      MenuProps = {},\r\n      multiple,\r\n      name,\r\n      onBlur,\r\n      onChange,\r\n      onClose,\r\n      onFocus,\r\n      onOpen,\r\n      open: openProp,\r\n      readOnly,\r\n      renderValue,\r\n      SelectDisplayProps = {},\r\n      tabIndex: tabIndexProp,\r\n      value: valueProp,\r\n      variant = 'standard'\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const [value, setValueState] = useControlled({\r\n    controlled: valueProp,\r\n    default: defaultValue,\r\n    name: 'Select'\r\n  });\r\n  const [openState, setOpenState] = useControlled({\r\n    controlled: openProp,\r\n    default: defaultOpen,\r\n    name: 'Select'\r\n  });\r\n  const inputRef = React.useRef(null);\r\n  const displayRef = React.useRef(null);\r\n  const [displayNode, setDisplayNode] = React.useState(null);\r\n  const {\r\n    current: isOpenControlled\r\n  } = React.useRef(openProp != null);\r\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\r\n  const handleRef = useForkRef(ref, inputRefProp);\r\n  const handleDisplayRef = React.useCallback(node => {\r\n    displayRef.current = node;\r\n    if (node) {\r\n      setDisplayNode(node);\r\n    }\r\n  }, []);\r\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\r\n  React.useImperativeHandle(handleRef, () => ({\r\n    focus: () => {\r\n      displayRef.current.focus();\r\n    },\r\n    node: inputRef.current,\r\n    value\r\n  }), [value]);\r\n\r\n  // Resize menu on `defaultOpen` automatic toggle.\r\n  React.useEffect(() => {\r\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\r\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\r\n      displayRef.current.focus();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [displayNode, autoWidth]);\r\n  // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\r\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\r\n  React.useEffect(() => {\r\n    if (autoFocus) {\r\n      displayRef.current.focus();\r\n    }\r\n  }, [autoFocus]);\r\n  React.useEffect(() => {\r\n    if (!labelId) {\r\n      return undefined;\r\n    }\r\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\r\n    if (label) {\r\n      const handler = () => {\r\n        if (getSelection().isCollapsed) {\r\n          displayRef.current.focus();\r\n        }\r\n      };\r\n      label.addEventListener('click', handler);\r\n      return () => {\r\n        label.removeEventListener('click', handler);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [labelId]);\r\n  const update = (open, event) => {\r\n    if (open) {\r\n      if (onOpen) {\r\n        onOpen(event);\r\n      }\r\n    } else if (onClose) {\r\n      onClose(event);\r\n    }\r\n    if (!isOpenControlled) {\r\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\r\n      setOpenState(open);\r\n    }\r\n  };\r\n  const handleMouseDown = event => {\r\n    // Ignore everything but left-click\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n    // Hijack the default focus behavior.\r\n    event.preventDefault();\r\n    displayRef.current.focus();\r\n    update(true, event);\r\n  };\r\n  const handleClose = event => {\r\n    update(false, event);\r\n  };\r\n  const childrenArray = React.Children.toArray(children);\r\n\r\n  // Support autofill.\r\n  const handleChange = event => {\r\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    const child = childrenArray[index];\r\n    setValueState(child.props.value);\r\n    if (onChange) {\r\n      onChange(event, child);\r\n    }\r\n  };\r\n  const handleItemClick = child => event => {\r\n    let newValue;\r\n\r\n    // We use the tabindex attribute to signal the available options.\r\n    if (!event.currentTarget.hasAttribute('tabindex')) {\r\n      return;\r\n    }\r\n    if (multiple) {\r\n      newValue = Array.isArray(value) ? value.slice() : [];\r\n      const itemIndex = value.indexOf(child.props.value);\r\n      if (itemIndex === -1) {\r\n        newValue.push(child.props.value);\r\n      } else {\r\n        newValue.splice(itemIndex, 1);\r\n      }\r\n    } else {\r\n      newValue = child.props.value;\r\n    }\r\n    if (child.props.onClick) {\r\n      child.props.onClick(event);\r\n    }\r\n    if (value !== newValue) {\r\n      setValueState(newValue);\r\n      if (onChange) {\r\n        // Redefine target to allow name and value to be read.\r\n        // This allows seamless integration with the most popular form libraries.\r\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\r\n        // Clone the event to not override `target` of the original event.\r\n        const nativeEvent = event.nativeEvent || event;\r\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\r\n        Object.defineProperty(clonedEvent, 'target', {\r\n          writable: true,\r\n          value: {\r\n            value: newValue,\r\n            name\r\n          }\r\n        });\r\n        onChange(clonedEvent, child);\r\n      }\r\n    }\r\n    if (!multiple) {\r\n      update(false, event);\r\n    }\r\n  };\r\n  const handleKeyDown = event => {\r\n    if (!readOnly) {\r\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown',\r\n      // The native select doesn't respond to enter on macOS, but it's recommended by\r\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\r\n      'Enter'];\r\n      if (validKeys.indexOf(event.key) !== -1) {\r\n        event.preventDefault();\r\n        update(true, event);\r\n      }\r\n    }\r\n  };\r\n  const open = displayNode !== null && openState;\r\n  const handleBlur = event => {\r\n    // if open event.stopImmediatePropagation\r\n    if (!open && onBlur) {\r\n      // Preact support, target is read only property on a native event.\r\n      Object.defineProperty(event, 'target', {\r\n        writable: true,\r\n        value: {\r\n          value,\r\n          name\r\n        }\r\n      });\r\n      onBlur(event);\r\n    }\r\n  };\r\n  delete other['aria-invalid'];\r\n  let display;\r\n  let displaySingle;\r\n  const displayMultiple = [];\r\n  let computeDisplay = false;\r\n  let foundMatch = false;\r\n\r\n  // No need to display any value if the field is empty.\r\n  if (isFilled({\r\n    value\r\n  }) || displayEmpty) {\r\n    if (renderValue) {\r\n      display = renderValue(value);\r\n    } else {\r\n      computeDisplay = true;\r\n    }\r\n  }\r\n  const items = childrenArray.map(child => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n    let selected;\r\n    if (multiple) {\r\n      if (!Array.isArray(value)) {\r\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\r\n      }\r\n      selected = value.some(v => areEqualValues(v, child.props.value));\r\n      if (selected && computeDisplay) {\r\n        displayMultiple.push(child.props.children);\r\n      }\r\n    } else {\r\n      selected = areEqualValues(value, child.props.value);\r\n      if (selected && computeDisplay) {\r\n        displaySingle = child.props.children;\r\n      }\r\n    }\r\n    if (selected) {\r\n      foundMatch = true;\r\n    }\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      'aria-selected': selected ? 'true' : 'false',\r\n      onClick: handleItemClick(child),\r\n      onKeyUp: event => {\r\n        if (event.key === ' ') {\r\n          // otherwise our MenuItems dispatches a click event\r\n          // it's not behavior of the native <option> and causes\r\n          // the select to close immediately since we open on space keydown\r\n          event.preventDefault();\r\n        }\r\n        if (child.props.onKeyUp) {\r\n          child.props.onKeyUp(event);\r\n        }\r\n      },\r\n      role: 'option',\r\n      selected,\r\n      value: undefined,\r\n      // The value is most likely not a valid HTML attribute.\r\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\r\n    });\r\n  });\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useEffect(() => {\r\n      if (!foundMatch && !multiple && value !== '') {\r\n        const values = childrenArray.map(child => child.props.value);\r\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\r\n      }\r\n    }, [foundMatch, childrenArray, multiple, name, value]);\r\n  }\r\n  if (computeDisplay) {\r\n    if (multiple) {\r\n      if (displayMultiple.length === 0) {\r\n        display = null;\r\n      } else {\r\n        display = displayMultiple.reduce((output, child, index) => {\r\n          output.push(child);\r\n          if (index < displayMultiple.length - 1) {\r\n            output.push(', ');\r\n          }\r\n          return output;\r\n        }, []);\r\n      }\r\n    } else {\r\n      display = displaySingle;\r\n    }\r\n  }\r\n\r\n  // Avoid performing a layout computation in the render method.\r\n  let menuMinWidth = menuMinWidthState;\r\n  if (!autoWidth && isOpenControlled && displayNode) {\r\n    menuMinWidth = anchorElement.clientWidth;\r\n  }\r\n  let tabIndex;\r\n  if (typeof tabIndexProp !== 'undefined') {\r\n    tabIndex = tabIndexProp;\r\n  } else {\r\n    tabIndex = disabled ? null : 0;\r\n  }\r\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\r\n  const ownerState = _extends({}, props, {\r\n    variant,\r\n    value,\r\n    open\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\r\n      ref: handleDisplayRef,\r\n      tabIndex: tabIndex,\r\n      role: \"button\",\r\n      \"aria-disabled\": disabled ? 'true' : undefined,\r\n      \"aria-expanded\": open ? 'true' : 'false',\r\n      \"aria-haspopup\": \"listbox\",\r\n      \"aria-label\": ariaLabel,\r\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\r\n      \"aria-describedby\": ariaDescribedby,\r\n      onKeyDown: handleKeyDown,\r\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\r\n      onBlur: handleBlur,\r\n      onFocus: onFocus\r\n    }, SelectDisplayProps, {\r\n      ownerState: ownerState,\r\n      className: clsx(SelectDisplayProps.className, classes.select, className)\r\n      // The id is required for proper a11y\r\n      ,\r\n      id: buttonId,\r\n      children: isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\r\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\r\n        className: \"notranslate\",\r\n        children: \"\\u200B\"\r\n      })) : display\r\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\r\n      value: Array.isArray(value) ? value.join(',') : value,\r\n      name: name,\r\n      ref: inputRef,\r\n      \"aria-hidden\": true,\r\n      onChange: handleChange,\r\n      tabIndex: -1,\r\n      disabled: disabled,\r\n      className: classes.nativeInput,\r\n      autoFocus: autoFocus,\r\n      ownerState: ownerState\r\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\r\n      as: IconComponent,\r\n      className: classes.icon,\r\n      ownerState: ownerState\r\n    }), /*#__PURE__*/_jsx(Menu, _extends({\r\n      id: `menu-${name || ''}`,\r\n      anchorEl: anchorElement,\r\n      open: open,\r\n      onClose: handleClose,\r\n      anchorOrigin: {\r\n        vertical: 'bottom',\r\n        horizontal: 'center'\r\n      },\r\n      transformOrigin: {\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }\r\n    }, MenuProps, {\r\n      MenuListProps: _extends({\r\n        'aria-labelledby': labelId,\r\n        role: 'listbox',\r\n        disableListWrap: true\r\n      }, MenuProps.MenuListProps),\r\n      PaperProps: _extends({}, MenuProps.PaperProps, {\r\n        style: _extends({\r\n          minWidth: menuMinWidth\r\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\r\n      }),\r\n      children: items\r\n    }))]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-label': PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\r\n  autoWidth: PropTypes.bool,\r\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * The CSS class name of the select element.\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\r\n   * You can only use it when the `native` prop is `false` (default).\r\n   */\r\n  defaultOpen: PropTypes.bool,\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\r\n  defaultValue: PropTypes.any,\r\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\r\n  displayEmpty: PropTypes.bool,\r\n  /**\r\n   * The icon that displays the arrow.\r\n   */\r\n  IconComponent: PropTypes.elementType.isRequired,\r\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\r\n  inputRef: refType,\r\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\r\n  labelId: PropTypes.string,\r\n  /**\r\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\r\n   */\r\n  MenuProps: PropTypes.object,\r\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\r\n  multiple: PropTypes.bool,\r\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\r\n  name: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  readOnly: PropTypes.bool,\r\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderValue: PropTypes.func,\r\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\r\n  SelectDisplayProps: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  type: PropTypes.any,\r\n  /**\r\n   * The input value.\r\n   */\r\n  value: PropTypes.any,\r\n  /**\r\n   * The variant to use.\r\n   */\r\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\r\n} : void 0;\r\nexport default SelectInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}