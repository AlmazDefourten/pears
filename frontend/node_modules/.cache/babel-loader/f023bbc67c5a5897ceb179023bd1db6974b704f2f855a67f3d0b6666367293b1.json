{"ast":null,"code":"import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\nfunction extractEventInfo(event) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    point: {\n      x: event[pointType + \"X\"],\n      y: event[pointType + \"Y\"]\n    }\n  };\n}\nconst wrapHandler = function (handler) {\n  let shouldFilterPrimaryPointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const listener = event => handler(event, extractEventInfo(event));\n  return shouldFilterPrimaryPointer ? event => isPrimaryPointer(event) && listener(event) : listener;\n};\nexport { extractEventInfo, wrapHandler };","map":{"version":3,"names":["isPrimaryPointer","extractEventInfo","event","pointType","point","x","y","wrapHandler","handler","shouldFilterPrimaryPointer","listener"],"sources":["C:/Users/Кирилл/Desktop/pears/frontend/node_modules/framer-motion/dist/es/events/event-info.mjs"],"sourcesContent":["import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? (event) => isPrimaryPointer(event) && listener(event)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,gCAAgC;AAEjE,SAASC,gBAAgB,CAACC,KAAK,EAAsB;EAAA,IAApBC,SAAS,uEAAG,MAAM;EAC/C,OAAO;IACHC,KAAK,EAAE;MACHC,CAAC,EAAEH,KAAK,CAACC,SAAS,GAAG,GAAG,CAAC;MACzBG,CAAC,EAAEJ,KAAK,CAACC,SAAS,GAAG,GAAG;IAC5B;EACJ,CAAC;AACL;AACA,MAAMI,WAAW,GAAG,UAACC,OAAO,EAAyC;EAAA,IAAvCC,0BAA0B,uEAAG,KAAK;EAC5D,MAAMC,QAAQ,GAAIR,KAAK,IAAKM,OAAO,CAACN,KAAK,EAAED,gBAAgB,CAACC,KAAK,CAAC,CAAC;EACnE,OAAOO,0BAA0B,GAC1BP,KAAK,IAAKF,gBAAgB,CAACE,KAAK,CAAC,IAAIQ,QAAQ,CAACR,KAAK,CAAC,GACrDQ,QAAQ;AAClB,CAAC;AAED,SAAST,gBAAgB,EAAEM,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}