{"ast":null,"code":"import { noopReturn } from '@motionone/utils';\nconst timeStep = 10;\nconst maxDuration = 10000;\nfunction pregenerateKeyframes(generator) {\n  let toUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noopReturn;\n  let overshootDuration = undefined;\n  let timestamp = timeStep;\n  let state = generator(0);\n  const keyframes = [toUnit(state.current)];\n  while (!state.done && timestamp < maxDuration) {\n    state = generator(timestamp);\n    keyframes.push(toUnit(state.done ? state.target : state.current));\n    if (overshootDuration === undefined && state.hasReachedTarget) {\n      overshootDuration = timestamp;\n    }\n    timestamp += timeStep;\n  }\n  const duration = timestamp - timeStep;\n  /**\r\n   * If generating an animation that didn't actually move,\r\n   * generate a second keyframe so we have an origin and target.\r\n   */\n  if (keyframes.length === 1) keyframes.push(state.current);\n  return {\n    keyframes,\n    duration: duration / 1000,\n    overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000\n  };\n}\nexport { pregenerateKeyframes };","map":{"version":3,"names":["noopReturn","timeStep","maxDuration","pregenerateKeyframes","generator","toUnit","arguments","length","undefined","overshootDuration","timestamp","state","keyframes","current","done","push","target","hasReachedTarget","duration"],"sources":["C:/Users/Кирилл/Desktop/here/pears/frontend/node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js"],"sourcesContent":["import { noopReturn } from '@motionone/utils';\r\n\r\nconst timeStep = 10;\r\nconst maxDuration = 10000;\r\nfunction pregenerateKeyframes(generator, toUnit = noopReturn) {\r\n    let overshootDuration = undefined;\r\n    let timestamp = timeStep;\r\n    let state = generator(0);\r\n    const keyframes = [toUnit(state.current)];\r\n    while (!state.done && timestamp < maxDuration) {\r\n        state = generator(timestamp);\r\n        keyframes.push(toUnit(state.done ? state.target : state.current));\r\n        if (overshootDuration === undefined && state.hasReachedTarget) {\r\n            overshootDuration = timestamp;\r\n        }\r\n        timestamp += timeStep;\r\n    }\r\n    const duration = timestamp - timeStep;\r\n    /**\r\n     * If generating an animation that didn't actually move,\r\n     * generate a second keyframe so we have an origin and target.\r\n     */\r\n    if (keyframes.length === 1)\r\n        keyframes.push(state.current);\r\n    return {\r\n        keyframes,\r\n        duration: duration / 1000,\r\n        overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000,\r\n    };\r\n}\r\n\r\nexport { pregenerateKeyframes };\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,QAAQ,GAAG,EAAE;AACnB,MAAMC,WAAW,GAAG,KAAK;AACzB,SAASC,oBAAoBA,CAACC,SAAS,EAAuB;EAAA,IAArBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,UAAU;EACxD,IAAIS,iBAAiB,GAAGD,SAAS;EACjC,IAAIE,SAAS,GAAGT,QAAQ;EACxB,IAAIU,KAAK,GAAGP,SAAS,CAAC,CAAC,CAAC;EACxB,MAAMQ,SAAS,GAAG,CAACP,MAAM,CAACM,KAAK,CAACE,OAAO,CAAC,CAAC;EACzC,OAAO,CAACF,KAAK,CAACG,IAAI,IAAIJ,SAAS,GAAGR,WAAW,EAAE;IAC3CS,KAAK,GAAGP,SAAS,CAACM,SAAS,CAAC;IAC5BE,SAAS,CAACG,IAAI,CAACV,MAAM,CAACM,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACK,MAAM,GAAGL,KAAK,CAACE,OAAO,CAAC,CAAC;IACjE,IAAIJ,iBAAiB,KAAKD,SAAS,IAAIG,KAAK,CAACM,gBAAgB,EAAE;MAC3DR,iBAAiB,GAAGC,SAAS;IACjC;IACAA,SAAS,IAAIT,QAAQ;EACzB;EACA,MAAMiB,QAAQ,GAAGR,SAAS,GAAGT,QAAQ;EACrC;AACJ;AACA;AACA;EACI,IAAIW,SAAS,CAACL,MAAM,KAAK,CAAC,EACtBK,SAAS,CAACG,IAAI,CAACJ,KAAK,CAACE,OAAO,CAAC;EACjC,OAAO;IACHD,SAAS;IACTM,QAAQ,EAAEA,QAAQ,GAAG,IAAI;IACzBT,iBAAiB,EAAE,CAACA,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAGA,iBAAiB,GAAGS,QAAQ,IAAI;EACrH,CAAC;AACL;AAEA,SAASf,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}