{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0438\\u0440\\u0438\\u043B\\u043B\\\\Desktop\\\\pears\\\\frontend\\\\src\\\\components\\\\swipes\\\\swipes.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from './card';\nimport css from \"./swipes.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Swipes = () => {\n  _s();\n  //we store users here\n  const [characters, setCharacters] = useState([{\n    name: 'Richard Hendricks'\n  }, {\n    name: 'Erlich Bachman'\n  }, {\n    name: 'Monica Hall'\n  }, {\n    name: 'Jared Dunn'\n  }, {\n    name: 'Dinesh Chugtai'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.cardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), characters.map(char =>\n    /*#__PURE__*/\n    // name - какие-то данные для карточки. Т.к. пример это только, то только имя. Так-то стоит передавать весь объект\n    // setCharacters - передаем функцию для изменения массива пользователей\n    _jsxDEV(Card, {\n      name: char.name,\n      setCharacters: setCharacters\n    }, char.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Swipes, \"BFzl+wj1qEen+ahrljVwwFmbHxQ=\");\n_c = Swipes;\nexport default Swipes;\nvar _c;\n$RefreshReg$(_c, \"Swipes\");","map":{"version":3,"names":["useState","Card","css","Swipes","characters","setCharacters","name","cardContainer","map","char"],"sources":["C:/Users/Кирилл/Desktop/pears/frontend/src/components/swipes/swipes.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Card from './card';\r\nimport css from \"./swipes.module.css\";\r\n\r\nconst Swipes =() =>{\r\n\r\n    //we store users here\r\n    const [characters, setCharacters] = useState([\r\n        {\r\n            name: 'Richard Hendricks',\r\n        },\r\n        {\r\n            name: 'Erlich Bachman',\r\n        },\r\n        {\r\n            name: 'Monica Hall',\r\n        },\r\n        {\r\n            name: 'Jared Dunn',\r\n        },\r\n        {\r\n            name: 'Dinesh Chugtai',\r\n        },\r\n    ]);\r\n\r\n    return(\r\n        <div className={css.cardContainer}>\r\n        <h1>Cards</h1>\r\n        {characters.map((char) =>\r\n          // name - какие-то данные для карточки. Т.к. пример это только, то только имя. Так-то стоит передавать весь объект\r\n          // setCharacters - передаем функцию для изменения массива пользователей\r\n          <Card key={char.name} name={char.name} setCharacters={setCharacters}/>\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Swipes;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AAAC;AAEtC,MAAMC,MAAM,GAAE,MAAK;EAAA;EAEf;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CACzC;IACIM,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,EACD;IACIA,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;EAEF,oBACI;IAAK,SAAS,EAAEJ,GAAG,CAACK,aAAc;IAAA,wBAClC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,EACbH,UAAU,CAACI,GAAG,CAAEC,IAAI;IAAA;IACnB;IACA;IACA,QAAC,IAAI;MAAiB,IAAI,EAAEA,IAAI,CAACH,IAAK;MAAC,aAAa,EAAED;IAAc,GAAzDI,IAAI,CAACH,IAAI;MAAA;MAAA;MAAA;IAAA,QAAkD,CACvE;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEZ,CAAC;AAAA,GA/BKH,MAAM;AAAA,KAANA,MAAM;AAiCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}