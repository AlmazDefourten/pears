{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nfunction isMouseEvent(event) {\n  return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n  return (event, info) => {\n    if (!isMouseEvent(event) || isDragActive()) return;\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n    if (visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Hover, isActive);\n    }\n    callback && callback(event, info);\n  };\n}\nfunction useHoverGesture(_ref) {\n  let {\n    onHoverStart,\n    onHoverEnd,\n    whileHover,\n    visualElement\n  } = _ref;\n  usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover ? createHoverEvent(visualElement, true, onHoverStart) : undefined, {\n    passive: !onHoverStart\n  });\n  usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover ? createHoverEvent(visualElement, false, onHoverEnd) : undefined, {\n    passive: !onHoverEnd\n  });\n}\nexport { useHoverGesture };","map":{"version":3,"names":["AnimationType","usePointerEvent","isDragActive","isMouseEvent","event","type","createHoverEvent","visualElement","isActive","callback","info","animationState","setActive","Hover","useHoverGesture","onHoverStart","onHoverEnd","whileHover","undefined","passive"],"sources":["C:/Users/Кирилл/Desktop/pears/frontend/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs"],"sourcesContent":["import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,SAASC,YAAY,CAACC,KAAK,EAAE;EACzB,OAAOA,KAAK,CAACC,IAAI,KAAK,KAAK,IAAID,KAAK,CAACC,IAAI,KAAK,OAAO;AACzD;AACA,SAASC,gBAAgB,CAACC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EACzD,OAAO,CAACL,KAAK,EAAEM,IAAI,KAAK;IACpB,IAAI,CAACP,YAAY,CAACC,KAAK,CAAC,IAAIF,YAAY,EAAE,EACtC;IACJ;AACR;AACA;IACQ,IAAIK,aAAa,CAACI,cAAc,EAAE;MAC9BJ,aAAa,CAACI,cAAc,CAACC,SAAS,CAACZ,aAAa,CAACa,KAAK,EAAEL,QAAQ,CAAC;IACzE;IACAC,QAAQ,IAAIA,QAAQ,CAACL,KAAK,EAAEM,IAAI,CAAC;EACrC,CAAC;AACL;AACA,SAASI,eAAe,OAA2D;EAAA,IAA1D;IAAEC,YAAY;IAAEC,UAAU;IAAEC,UAAU;IAAEV;EAAe,CAAC;EAC7EN,eAAe,CAACM,aAAa,EAAE,cAAc,EAAEQ,YAAY,IAAIE,UAAU,GACnEX,gBAAgB,CAACC,aAAa,EAAE,IAAI,EAAEQ,YAAY,CAAC,GACnDG,SAAS,EAAE;IAAEC,OAAO,EAAE,CAACJ;EAAa,CAAC,CAAC;EAC5Cd,eAAe,CAACM,aAAa,EAAE,cAAc,EAAES,UAAU,IAAIC,UAAU,GACjEX,gBAAgB,CAACC,aAAa,EAAE,KAAK,EAAES,UAAU,CAAC,GAClDE,SAAS,EAAE;IAAEC,OAAO,EAAE,CAACH;EAAW,CAAC,CAAC;AAC9C;AAEA,SAASF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}